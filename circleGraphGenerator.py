from Bio import SeqIO, AlignIO
from Bio.Graphics import GenomeDiagram
from reportlab.lib.colors import red, grey, orange, green, brown, blue, lightblue, purple
from reportlab.lib import colors
from Bio.SeqUtils import GC, GC_skew, GC123
import os
from sys import platform



def generateCircleGraph(file, number_of_top_topologies, windows_to_top_topologies, top_topologies_to_colors, window_size, window_offset):

    with open(file) as f:
        # First line contains the number and length of the sequences
        line = f.readline()
        line = line.split()

        number_of_sequences = int(line[0])
        length_of_sequences = int(line[1])

    f.close()

    print number_of_sequences, length_of_sequences
    # length_of_sequences = 500
    # window_size = 100

    # for topology in top_topologies_to_colors:

    print 'WINDOWS TO TOPOLOGIES:', windows_to_top_topologies

    topologies_to_data = {}

    for topology in top_topologies_to_colors:
        topologies_to_data[topology] = []
    topologies_to_data['Other'] = []

    for topology in top_topologies_to_colors:
        for window in windows_to_top_topologies:
            if topology == window[1]:
                topologies_to_data[topology].append(tuple([window[0], 1]))
            else:
                topologies_to_data[topology].append(tuple([window[0], 0]))

    # print '\n\n'
    # for t in topologies_to_data:
    #     print t, '\n', topologies_to_data[t]
    #     print
    #
    # a = zip(range(number_of_top_topologies + 1), topologies_to_data.values())
    # print a

    # try:
    #     # check to see if phylip file is in interleaved format or sequential.
    #     record = SeqIO.read(file, "phylip")
    # except ValueError:
    #     # if it is in sequential, convert to interleaved
    #
    #     filename = os.path.splitext(file)[0]
    #     extension = os.path.splitext(file)[1]
    #
    #     input_handle = open(file, "rU")
    #     output_handle = open(filename + "_interleaved" + extension, "w")
    #
    #     alignments = AlignIO.parse(input_handle, "phylip-relaxed")
    #     AlignIO.write(alignments, output_handle, "phylip")
    #
    #     output_handle.close()
    #     input_handle.close()
    #
    #     record = SeqIO.read(filename + "_interleaved" + extension, "phylip")

    # list of all data
    # records = [record]

    ############################ features/graphs < featureSets/graphSets < tracks < diagram ############################

    # name of the figure
    name = "circleGraph"

    # create the diagram -- highest level container for everything
    # the diagram directly contains tracks
    # the diagram has levels -- for circular the innermost level is the lowest -- for linear the top level is the lowest
    # after you are done building the diagram you call the .draw method to display it and the .write method to save it
    diagram = GenomeDiagram.Diagram(name)

    # print topologies_to_data
    data = topologies_to_data.values()
    # print data

    data_to_colors = {}
    for topology in topologies_to_data:
        data_to_colors[str(topologies_to_data[topology])] = top_topologies_to_colors[topology]

    # print data_to_colors


    diagram.new_track(1, greytrack=0, name="Track", height=2, hide=0, scale=1,
                      scale_color=colors.black, scale_font='Helvetica', scale_fontsize=6,
                      scale_fontangle=45, scale_ticks=1, scale_largeticks=0.2, scale_smallticks=0.1,
                      scale_largetick_interval=(length_of_sequences/window_size), scale_smalltick_interval=(length_of_sequences/window_size/2),
                      scale_largetick_labels=1, scale_smalltick_labels=0)

    for i in range(number_of_top_topologies + 1):
        # create tracks -- and add them to the diagram
        diagram.new_track(i + 2, name="Track" + str(i + 1), height=1.0, hide=0, greytrack=0, greytrack_labels=2, greytrack_font_size=8, grey_track_font_color=colors.black, scale=0)\
               .new_set('graph')\
               .new_graph(data[i], style='bar', colour=colors.HexColor(data_to_colors[str(data[i])]), altcolour=colors.transparent)

    full_data = []
    for j in range(length_of_sequences/(window_size)):
        if j % 2 == 0:
            full_data.append(tuple([j, 1]))
        else:
            full_data[0] = tuple([j, 0])

    # last shit
    diagram.new_track(i + 3, name="Track" + str(i + 1), height=2, hide=0, greytrack=0, greytrack_labels=2,
                      greytrack_font_size=8, grey_track_font_color=colors.black, scale=0) \
        .new_set('graph') \
        .new_graph(full_data, style='bar',
                   altcolour=colors.transparent)

     
    diagram.draw(format="circular", pagesize='A4', orientation='landscape', x=0.05, y=0.05, track_size=1.9, tracklines=0, circular=0)
    #
    # # save the file(s)
    diagram.write(name + ".pdf", "PDF")
    # diagram.write(name + ".eps", "EPS")
    # diagram.write(name + ".svg", "SVG")
    # diagram.write(name + ".png", "PNG")


if __name__ == '__main__':
    file = 'phylip2.txt'
    # number_of_top_topologies = 3
    # windows_to_top_topologies = {0: 'Other', 1: 'Other', 2: 'Other', 3: '(((seq6,(((seq1,(seq4,seq2)),seq3),seq5)),seq9),(seq8,seq7),seq0);', 4: 'Other', 5: '(seq7,((seq3,seq9),(seq8,(seq4,((seq2,(seq6,seq5)),seq1)))),seq0);', 6: 'Other', 7: '((seq2,(seq4,seq5)),((seq8,(seq3,((seq1,seq9),seq7))),seq6),seq0);', 8: 'Other', 9: 'Other'}
    # top_topologies_to_colors = {'(((seq6,(((seq1,(seq4,seq2)),seq3),seq5)),seq9),(seq8,seq7),seq0);': '#0000ff', '(seq7,((seq3,seq9),(seq8,(seq4,((seq2,(seq6,seq5)),seq1)))),seq0);': '#ffff00', 'Other': '#ff0000', '((seq2,(seq4,seq5)),((seq8,(seq3,((seq1,seq9),seq7))),seq6),seq0);': '#32cd32'}
    # generateCircleGraph(file, number_of_top_topologies, windows_to_top_topologies.items(), top_topologies_to_colors)

    # a = {10: 'Other', 1: '(Seq1,(Seq3,Seq2),Seq0);', 2: 'Other', 3: '(Seq1,(Seq3,Seq2),Seq0);', 4: '((Seq2,Seq1),Seq3,Seq0);', 5: '((Seq3,Seq1),Seq2,Seq0);', 6: '((Seq2,Seq1),Seq3,Seq0);', 7: 'Other', 8: 'Other', 9: '(Seq1,(Seq3,Seq2),Seq0);', 10: 'Other', 11: '(Seq1,(Seq3,Seq2),Seq0);', 12: '((Seq2,Seq1),Seq3,Seq0);', 13: '((Seq3,Seq1),Seq2,Seq0);', 14: '((Seq2,Seq1),Seq3,Seq0);', 15: 'Other', 16: 'Other', 17: '(Seq1,(Seq3,Seq2),Seq0);', 18: 'Other', 19: '(Seq1,(Seq3,Seq2),Seq0);', 20: '((Seq2,Seq1),Seq3,Seq0);', 21: '((Seq3,Seq1),Seq2,Seq0);', 22: '((Seq2,Seq1),Seq3,Seq0);', 23: 'Other', 24: '((Seq3,Seq1),Seq2,Seq0);'}
    # b = {'Other': '#ff0000', '(Seq1,(Seq3,Seq2),Seq0);': '#0000ff', '((Seq3,Seq1),Seq2,Seq0);': '#32cd32', '((Seq2,Seq1),Seq3,Seq0);': '#ffff00'}
    # c = 3
    # generateCircleGraph(c, a.items(), b, 0, 0)

    x = {0: 'Other', 1: '(Seq1,(Seq3,Seq2),Seq0);', 2: 'Other', 3: '(Seq1,(Seq3,Seq2),Seq0);', 4: '((Seq2,Seq1),Seq3,Seq0);', 5: '((Seq3,Seq1),Seq2,Seq0);', 6: '((Seq2,Seq1),Seq3,Seq0);', 7: 'Other', 8: 'Other', 9: '(Seq1,(Seq3,Seq2),Seq0);', 10: 'Other', 11: '(Seq1,(Seq3,Seq2),Seq0);', 12: '((Seq2,Seq1),Seq3,Seq0);', 13: '((Seq3,Seq1),Seq2,Seq0);', 14: '((Seq2,Seq1),Seq3,Seq0);', 15: 'Other', 16: 'Other', 17: '(Seq1,(Seq3,Seq2),Seq0);', 18: 'Other', 19: '(Seq1,(Seq3,Seq2),Seq0);', 20: '((Seq2,Seq1),Seq3,Seq0);', 21: '((Seq3,Seq1),Seq2,Seq0);', 22: '((Seq2,Seq1),Seq3,Seq0);', 23: 'Other', 24: '((Seq3,Seq1),Seq2,Seq0);', 25: 'Other', 26: '(Seq1,(Seq3,Seq2),Seq0);', 27: 'Other', 28: '(Seq1,(Seq3,Seq2),Seq0);', 29: '((Seq2,Seq1),Seq3,Seq0);', 30: '((Seq3,Seq1),Seq2,Seq0);', 31: '((Seq2,Seq1),Seq3,Seq0);', 32: 'Other', 33: 'Other', 34: '(Seq1,(Seq3,Seq2),Seq0);', 35: 'Other', 36: '(Seq1,(Seq3,Seq2),Seq0);', 37: '((Seq2,Seq1),Seq3,Seq0);', 38: '((Seq3,Seq1),Seq2,Seq0);', 39: '((Seq2,Seq1),Seq3,Seq0);', 40: 'Other', 41: 'Other', 42: '(Seq1,(Seq3,Seq2),Seq0);', 43: 'Other', 44: '(Seq1,(Seq3,Seq2),Seq0);', 45: '((Seq2,Seq1),Seq3,Seq0);', 46: '((Seq3,Seq1),Seq2,Seq0);', 47: '((Seq2,Seq1),Seq3,Seq0);', 48: 'Other', 49: '((Seq3,Seq1),Seq2,Seq0);', 50: 'Other', 51: '(Seq1,(Seq3,Seq2),Seq0);', 52: 'Other', 53: '(Seq1,(Seq3,Seq2),Seq0);', 54: '((Seq2,Seq1),Seq3,Seq0);', 55: '((Seq3,Seq1),Seq2,Seq0);', 56: '((Seq2,Seq1),Seq3,Seq0);', 57: 'Other', 58: 'Other', 59: '(Seq1,(Seq3,Seq2),Seq0);', 60: 'Other', 61: '(Seq1,(Seq3,Seq2),Seq0);', 62: '((Seq2,Seq1),Seq3,Seq0);', 63: '((Seq3,Seq1),Seq2,Seq0);', 64: '((Seq2,Seq1),Seq3,Seq0);', 65: 'Other', 66: 'Other', 67: '(Seq1,(Seq3,Seq2),Seq0);', 68: 'Other', 69: '(Seq1,(Seq3,Seq2),Seq0);', 70: '((Seq2,Seq1),Seq3,Seq0);', 71: '((Seq3,Seq1),Seq2,Seq0);', 72: '((Seq2,Seq1),Seq3,Seq0);', 73: 'Other', 74: '((Seq3,Seq1),Seq2,Seq0);', 75: 'Other', 76: '(Seq1,(Seq3,Seq2),Seq0);', 77: 'Other', 78: '(Seq1,(Seq3,Seq2),Seq0);', 79: '((Seq2,Seq1),Seq3,Seq0);', 80: '((Seq3,Seq1),Seq2,Seq0);', 81: '((Seq2,Seq1),Seq3,Seq0);', 82: 'Other', 83: 'Other', 84: '(Seq1,(Seq3,Seq2),Seq0);', 85: 'Other', 86: '(Seq1,(Seq3,Seq2),Seq0);', 87: '((Seq2,Seq1),Seq3,Seq0);', 88: '((Seq3,Seq1),Seq2,Seq0);', 89: '((Seq2,Seq1),Seq3,Seq0);', 90: 'Other', 91: 'Other', 92: '(Seq1,(Seq3,Seq2),Seq0);', 93: 'Other', 94: '(Seq1,(Seq3,Seq2),Seq0);', 95: '((Seq2,Seq1),Seq3,Seq0);', 96: '((Seq3,Seq1),Seq2,Seq0);', 97: '((Seq2,Seq1),Seq3,Seq0);', 98: 'Other', 99: '((Seq3,Seq1),Seq2,Seq0);', 100: 'Other', 101: '(Seq1,(Seq3,Seq2),Seq0);', 102: 'Other', 103: '(Seq1,(Seq3,Seq2),Seq0);', 104: '((Seq2,Seq1),Seq3,Seq0);', 105: '((Seq3,Seq1),Seq2,Seq0);', 106: '((Seq2,Seq1),Seq3,Seq0);', 107: 'Other', 108: 'Other', 109: '(Seq1,(Seq3,Seq2),Seq0);', 110: 'Other', 111: '(Seq1,(Seq3,Seq2),Seq0);', 112: '((Seq2,Seq1),Seq3,Seq0);', 113: '((Seq3,Seq1),Seq2,Seq0);', 114: '((Seq2,Seq1),Seq3,Seq0);', 115: 'Other', 116: 'Other', 117: '(Seq1,(Seq3,Seq2),Seq0);', 118: 'Other', 119: '(Seq1,(Seq3,Seq2),Seq0);', 120: '((Seq2,Seq1),Seq3,Seq0);', 121: '((Seq3,Seq1),Seq2,Seq0);', 122: '((Seq2,Seq1),Seq3,Seq0);', 123: 'Other', 124: '((Seq3,Seq1),Seq2,Seq0);', 125: 'Other', 126: '(Seq1,(Seq3,Seq2),Seq0);', 127: 'Other', 128: '(Seq1,(Seq3,Seq2),Seq0);', 129: '((Seq2,Seq1),Seq3,Seq0);', 130: '((Seq3,Seq1),Seq2,Seq0);', 131: '((Seq2,Seq1),Seq3,Seq0);', 132: 'Other', 133: 'Other', 134: '(Seq1,(Seq3,Seq2),Seq0);', 135: 'Other', 136: '(Seq1,(Seq3,Seq2),Seq0);', 137: '((Seq2,Seq1),Seq3,Seq0);', 138: '((Seq3,Seq1),Seq2,Seq0);', 139: '((Seq2,Seq1),Seq3,Seq0);', 140: 'Other', 141: 'Other', 142: '(Seq1,(Seq3,Seq2),Seq0);', 143: 'Other', 144: '(Seq1,(Seq3,Seq2),Seq0);', 145: '((Seq2,Seq1),Seq3,Seq0);', 146: '((Seq3,Seq1),Seq2,Seq0);', 147: '((Seq2,Seq1),Seq3,Seq0);', 148: 'Other', 149: '((Seq3,Seq1),Seq2,Seq0);', 150: 'Other', 151: '(Seq1,(Seq3,Seq2),Seq0);', 152: 'Other', 153: '(Seq1,(Seq3,Seq2),Seq0);', 154: '((Seq2,Seq1),Seq3,Seq0);', 155: '((Seq3,Seq1),Seq2,Seq0);', 156: '((Seq2,Seq1),Seq3,Seq0);', 157: 'Other', 158: 'Other', 159: '(Seq1,(Seq3,Seq2),Seq0);', 160: 'Other', 161: '(Seq1,(Seq3,Seq2),Seq0);', 162: '((Seq2,Seq1),Seq3,Seq0);', 163: '((Seq3,Seq1),Seq2,Seq0);', 164: '((Seq2,Seq1),Seq3,Seq0);', 165: 'Other', 166: 'Other', 167: '(Seq1,(Seq3,Seq2),Seq0);', 168: 'Other', 169: '(Seq1,(Seq3,Seq2),Seq0);', 170: '((Seq2,Seq1),Seq3,Seq0);', 171: '((Seq3,Seq1),Seq2,Seq0);', 172: '((Seq2,Seq1),Seq3,Seq0);', 173: 'Other', 174: '((Seq3,Seq1),Seq2,Seq0);', 175: 'Other', 176: '(Seq1,(Seq3,Seq2),Seq0);', 177: 'Other', 178: '(Seq1,(Seq3,Seq2),Seq0);', 179: '((Seq2,Seq1),Seq3,Seq0);', 180: '((Seq3,Seq1),Seq2,Seq0);', 181: '((Seq2,Seq1),Seq3,Seq0);', 182: 'Other', 183: 'Other', 184: '(Seq1,(Seq3,Seq2),Seq0);', 185: 'Other', 186: '(Seq1,(Seq3,Seq2),Seq0);', 187: '((Seq2,Seq1),Seq3,Seq0);', 188: '((Seq3,Seq1),Seq2,Seq0);', 189: '((Seq2,Seq1),Seq3,Seq0);', 190: 'Other', 191: 'Other', 192: '(Seq1,(Seq3,Seq2),Seq0);', 193: 'Other', 194: '(Seq1,(Seq3,Seq2),Seq0);', 195: '((Seq2,Seq1),Seq3,Seq0);', 196: '((Seq3,Seq1),Seq2,Seq0);', 197: '((Seq2,Seq1),Seq3,Seq0);', 198: 'Other', 199: '((Seq3,Seq1),Seq2,Seq0);', 200: 'Other', 201: '(Seq1,(Seq3,Seq2),Seq0);', 202: 'Other', 203: '(Seq1,(Seq3,Seq2),Seq0);', 204: '((Seq2,Seq1),Seq3,Seq0);', 205: '((Seq3,Seq1),Seq2,Seq0);', 206: '((Seq2,Seq1),Seq3,Seq0);', 207: 'Other', 208: 'Other', 209: '(Seq1,(Seq3,Seq2),Seq0);', 210: 'Other', 211: '(Seq1,(Seq3,Seq2),Seq0);', 212: '((Seq2,Seq1),Seq3,Seq0);', 213: '((Seq3,Seq1),Seq2,Seq0);', 214: '((Seq2,Seq1),Seq3,Seq0);', 215: 'Other', 216: 'Other', 217: '(Seq1,(Seq3,Seq2),Seq0);', 218: 'Other', 219: '(Seq1,(Seq3,Seq2),Seq0);', 220: '((Seq2,Seq1),Seq3,Seq0);', 221: '((Seq3,Seq1),Seq2,Seq0);', 222: '((Seq2,Seq1),Seq3,Seq0);', 223: 'Other', 224: '((Seq3,Seq1),Seq2,Seq0);', 225: 'Other', 226: '(Seq1,(Seq3,Seq2),Seq0);', 227: 'Other', 228: '(Seq1,(Seq3,Seq2),Seq0);', 229: '((Seq2,Seq1),Seq3,Seq0);', 230: '((Seq3,Seq1),Seq2,Seq0);', 231: '((Seq2,Seq1),Seq3,Seq0);', 232: 'Other', 233: 'Other', 234: '(Seq1,(Seq3,Seq2),Seq0);', 235: 'Other', 236: '(Seq1,(Seq3,Seq2),Seq0);', 237: '((Seq2,Seq1),Seq3,Seq0);', 238: '((Seq3,Seq1),Seq2,Seq0);', 239: '((Seq2,Seq1),Seq3,Seq0);', 240: 'Other', 241: 'Other', 242: '(Seq1,(Seq3,Seq2),Seq0);', 243: 'Other', 244: '(Seq1,(Seq3,Seq2),Seq0);', 245: '((Seq2,Seq1),Seq3,Seq0);', 246: '((Seq3,Seq1),Seq2,Seq0);', 247: '((Seq2,Seq1),Seq3,Seq0);', 248: 'Other', 249: '((Seq3,Seq1),Seq2,Seq0);', 250: 'Other', 251: '(Seq1,(Seq3,Seq2),Seq0);', 252: 'Other', 253: '(Seq1,(Seq3,Seq2),Seq0);', 254: '((Seq2,Seq1),Seq3,Seq0);', 255: '((Seq3,Seq1),Seq2,Seq0);', 256: '((Seq2,Seq1),Seq3,Seq0);', 257: 'Other', 258: 'Other', 259: '(Seq1,(Seq3,Seq2),Seq0);', 260: 'Other', 261: '(Seq1,(Seq3,Seq2),Seq0);', 262: '((Seq2,Seq1),Seq3,Seq0);', 263: '((Seq3,Seq1),Seq2,Seq0);', 264: '((Seq2,Seq1),Seq3,Seq0);', 265: 'Other', 266: 'Other', 267: '(Seq1,(Seq3,Seq2),Seq0);', 268: 'Other', 269: '(Seq1,(Seq3,Seq2),Seq0);', 270: '((Seq2,Seq1),Seq3,Seq0);', 271: '((Seq3,Seq1),Seq2,Seq0);', 272: '((Seq2,Seq1),Seq3,Seq0);', 273: 'Other', 274: '((Seq3,Seq1),Seq2,Seq0);', 275: 'Other', 276: '(Seq1,(Seq3,Seq2),Seq0);', 277: 'Other', 278: '(Seq1,(Seq3,Seq2),Seq0);', 279: '((Seq2,Seq1),Seq3,Seq0);', 280: '((Seq3,Seq1),Seq2,Seq0);', 281: '((Seq2,Seq1),Seq3,Seq0);', 282: 'Other', 283: 'Other', 284: '(Seq1,(Seq3,Seq2),Seq0);', 285: 'Other', 286: '(Seq1,(Seq3,Seq2),Seq0);', 287: '((Seq2,Seq1),Seq3,Seq0);', 288: '((Seq3,Seq1),Seq2,Seq0);', 289: '((Seq2,Seq1),Seq3,Seq0);', 290: 'Other', 291: 'Other', 292: '(Seq1,(Seq3,Seq2),Seq0);', 293: 'Other', 294: '(Seq1,(Seq3,Seq2),Seq0);', 295: '((Seq2,Seq1),Seq3,Seq0);', 296: '((Seq3,Seq1),Seq2,Seq0);', 297: '((Seq2,Seq1),Seq3,Seq0);', 298: 'Other', 299: '((Seq3,Seq1),Seq2,Seq0);', 300: 'Other', 301: '(Seq1,(Seq3,Seq2),Seq0);', 302: 'Other', 303: '(Seq1,(Seq3,Seq2),Seq0);', 304: '((Seq2,Seq1),Seq3,Seq0);', 305: '((Seq3,Seq1),Seq2,Seq0);', 306: '((Seq2,Seq1),Seq3,Seq0);', 307: 'Other', 308: 'Other', 309: '(Seq1,(Seq3,Seq2),Seq0);', 310: 'Other', 311: '(Seq1,(Seq3,Seq2),Seq0);', 312: '((Seq2,Seq1),Seq3,Seq0);', 313: '((Seq3,Seq1),Seq2,Seq0);', 314: '((Seq2,Seq1),Seq3,Seq0);', 315: 'Other', 316: 'Other', 317: '(Seq1,(Seq3,Seq2),Seq0);', 318: 'Other', 319: '(Seq1,(Seq3,Seq2),Seq0);', 320: '((Seq2,Seq1),Seq3,Seq0);', 321: '((Seq3,Seq1),Seq2,Seq0);', 322: '((Seq2,Seq1),Seq3,Seq0);', 323: 'Other', 324: '((Seq3,Seq1),Seq2,Seq0);', 325: 'Other', 326: '(Seq1,(Seq3,Seq2),Seq0);', 327: 'Other', 328: '(Seq1,(Seq3,Seq2),Seq0);', 329: '((Seq2,Seq1),Seq3,Seq0);', 330: '((Seq3,Seq1),Seq2,Seq0);', 331: '((Seq2,Seq1),Seq3,Seq0);', 332: 'Other', 333: 'Other', 334: '(Seq1,(Seq3,Seq2),Seq0);', 335: 'Other', 336: '(Seq1,(Seq3,Seq2),Seq0);', 337: '((Seq2,Seq1),Seq3,Seq0);', 338: '((Seq3,Seq1),Seq2,Seq0);', 339: '((Seq2,Seq1),Seq3,Seq0);', 340: 'Other', 341: 'Other', 342: '(Seq1,(Seq3,Seq2),Seq0);', 343: 'Other', 344: '(Seq1,(Seq3,Seq2),Seq0);', 345: '((Seq2,Seq1),Seq3,Seq0);', 346: '((Seq3,Seq1),Seq2,Seq0);', 347: '((Seq2,Seq1),Seq3,Seq0);', 348: 'Other', 349: '((Seq3,Seq1),Seq2,Seq0);', 350: 'Other', 351: '(Seq1,(Seq3,Seq2),Seq0);', 352: 'Other', 353: '(Seq1,(Seq3,Seq2),Seq0);', 354: '((Seq2,Seq1),Seq3,Seq0);', 355: '((Seq3,Seq1),Seq2,Seq0);', 356: '((Seq2,Seq1),Seq3,Seq0);', 357: 'Other', 358: 'Other', 359: '(Seq1,(Seq3,Seq2),Seq0);', 360: 'Other', 361: '(Seq1,(Seq3,Seq2),Seq0);', 362: '((Seq2,Seq1),Seq3,Seq0);', 363: '((Seq3,Seq1),Seq2,Seq0);', 364: '((Seq2,Seq1),Seq3,Seq0);', 365: 'Other', 366: 'Other', 367: '(Seq1,(Seq3,Seq2),Seq0);', 368: 'Other', 369: '(Seq1,(Seq3,Seq2),Seq0);', 370: '((Seq2,Seq1),Seq3,Seq0);', 371: '((Seq3,Seq1),Seq2,Seq0);', 372: '((Seq2,Seq1),Seq3,Seq0);', 373: 'Other', 374: '((Seq3,Seq1),Seq2,Seq0);', 375: 'Other', 376: '(Seq1,(Seq3,Seq2),Seq0);', 377: 'Other', 378: '(Seq1,(Seq3,Seq2),Seq0);', 379: '((Seq2,Seq1),Seq3,Seq0);', 380: '((Seq3,Seq1),Seq2,Seq0);', 381: '((Seq2,Seq1),Seq3,Seq0);', 382: 'Other', 383: 'Other', 384: '(Seq1,(Seq3,Seq2),Seq0);', 385: 'Other', 386: '(Seq1,(Seq3,Seq2),Seq0);', 387: '((Seq2,Seq1),Seq3,Seq0);', 388: '((Seq3,Seq1),Seq2,Seq0);', 389: '((Seq2,Seq1),Seq3,Seq0);', 390: 'Other', 391: 'Other', 392: '(Seq1,(Seq3,Seq2),Seq0);', 393: 'Other', 394: '(Seq1,(Seq3,Seq2),Seq0);', 395: '((Seq2,Seq1),Seq3,Seq0);', 396: '((Seq3,Seq1),Seq2,Seq0);', 397: '((Seq2,Seq1),Seq3,Seq0);', 398: 'Other', 399: '((Seq3,Seq1),Seq2,Seq0);', 400: 'Other', 401: '(Seq1,(Seq3,Seq2),Seq0);', 402: 'Other', 403: '(Seq1,(Seq3,Seq2),Seq0);', 404: '((Seq2,Seq1),Seq3,Seq0);', 405: '((Seq3,Seq1),Seq2,Seq0);', 406: '((Seq2,Seq1),Seq3,Seq0);', 407: 'Other', 408: 'Other', 409: '(Seq1,(Seq3,Seq2),Seq0);', 410: 'Other', 411: '(Seq1,(Seq3,Seq2),Seq0);', 412: '((Seq2,Seq1),Seq3,Seq0);', 413: '((Seq3,Seq1),Seq2,Seq0);', 414: '((Seq2,Seq1),Seq3,Seq0);', 415: 'Other', 416: 'Other', 417: '(Seq1,(Seq3,Seq2),Seq0);', 418: 'Other', 419: '(Seq1,(Seq3,Seq2),Seq0);', 420: '((Seq2,Seq1),Seq3,Seq0);', 421: '((Seq3,Seq1),Seq2,Seq0);', 422: '((Seq2,Seq1),Seq3,Seq0);', 423: 'Other', 424: '((Seq3,Seq1),Seq2,Seq0);', 425: 'Other', 426: '(Seq1,(Seq3,Seq2),Seq0);', 427: 'Other', 428: '(Seq1,(Seq3,Seq2),Seq0);', 429: '((Seq2,Seq1),Seq3,Seq0);', 430: '((Seq3,Seq1),Seq2,Seq0);', 431: '((Seq2,Seq1),Seq3,Seq0);', 432: 'Other', 433: 'Other', 434: '(Seq1,(Seq3,Seq2),Seq0);', 435: 'Other', 436: '(Seq1,(Seq3,Seq2),Seq0);', 437: '((Seq2,Seq1),Seq3,Seq0);', 438: '((Seq3,Seq1),Seq2,Seq0);', 439: '((Seq2,Seq1),Seq3,Seq0);', 440: 'Other', 441: 'Other', 442: '(Seq1,(Seq3,Seq2),Seq0);', 443: 'Other', 444: '(Seq1,(Seq3,Seq2),Seq0);', 445: '((Seq2,Seq1),Seq3,Seq0);', 446: '((Seq3,Seq1),Seq2,Seq0);', 447: '((Seq2,Seq1),Seq3,Seq0);', 448: 'Other', 449: '((Seq3,Seq1),Seq2,Seq0);', 450: 'Other', 451: '(Seq1,(Seq3,Seq2),Seq0);', 452: 'Other', 453: '(Seq1,(Seq3,Seq2),Seq0);', 454: '((Seq2,Seq1),Seq3,Seq0);', 455: '((Seq3,Seq1),Seq2,Seq0);', 456: '((Seq2,Seq1),Seq3,Seq0);', 457: 'Other', 458: 'Other', 459: '(Seq1,(Seq3,Seq2),Seq0);', 460: 'Other', 461: '(Seq1,(Seq3,Seq2),Seq0);', 462: '((Seq2,Seq1),Seq3,Seq0);', 463: '((Seq3,Seq1),Seq2,Seq0);', 464: '((Seq2,Seq1),Seq3,Seq0);', 465: 'Other', 466: 'Other', 467: '(Seq1,(Seq3,Seq2),Seq0);', 468: 'Other', 469: '(Seq1,(Seq3,Seq2),Seq0);', 470: '((Seq2,Seq1),Seq3,Seq0);', 471: '((Seq3,Seq1),Seq2,Seq0);', 472: '((Seq2,Seq1),Seq3,Seq0);', 473: 'Other', 474: '((Seq3,Seq1),Seq2,Seq0);', 475: 'Other', 476: '(Seq1,(Seq3,Seq2),Seq0);', 477: 'Other', 478: '(Seq1,(Seq3,Seq2),Seq0);', 479: '((Seq2,Seq1),Seq3,Seq0);', 480: '((Seq3,Seq1),Seq2,Seq0);', 481: '((Seq2,Seq1),Seq3,Seq0);', 482: 'Other', 483: 'Other', 484: '(Seq1,(Seq3,Seq2),Seq0);', 485: 'Other', 486: '(Seq1,(Seq3,Seq2),Seq0);', 487: '((Seq2,Seq1),Seq3,Seq0);', 488: '((Seq3,Seq1),Seq2,Seq0);', 489: '((Seq2,Seq1),Seq3,Seq0);', 490: 'Other', 491: 'Other', 492: '(Seq1,(Seq3,Seq2),Seq0);', 493: 'Other', 494: '(Seq1,(Seq3,Seq2),Seq0);', 495: '((Seq2,Seq1),Seq3,Seq0);', 496: '((Seq3,Seq1),Seq2,Seq0);', 497: '((Seq2,Seq1),Seq3,Seq0);', 498: 'Other', 499: '((Seq3,Seq1),Seq2,Seq0);'}
    y = {'Other': '#ff0000', '(Seq1,(Seq3,Seq2),Seq0);': '#0000ff', '((Seq3,Seq1),Seq2,Seq0);': '#32cd32', '((Seq2,Seq1),Seq3,Seq0);': '#ffff00'}
    z = 3
    #
    generateCircleGraph('2basePhylip1000.txt', z, x.items(), y, 2, 2)

    # d = {0: 'Other', 1: '(Seq1,(Seq3,Seq2),Seq0);', 2: 'Other', 3: '(Seq1,(Seq3,Seq2),Seq0);', 4: '((Seq2,Seq1),Seq3,Seq0);', 5: '((Seq3,Seq1),Seq2,Seq0);', 6: '((Seq2,Seq1),Seq3,Seq0);', 7: 'Other', 8: 'Other', 9: '(Seq1,(Seq3,Seq2),Seq0);', 10: 'Other', 11: '(Seq1,(Seq3,Seq2),Seq0);', 12: '((Seq2,Seq1),Seq3,Seq0);', 13: '((Seq3,Seq1),Seq2,Seq0);', 14: '((Seq2,Seq1),Seq3,Seq0);', 15: 'Other', 16: 'Other', 17: '(Seq1,(Seq3,Seq2),Seq0);', 18: 'Other', 19: '(Seq1,(Seq3,Seq2),Seq0);', 20: '((Seq2,Seq1),Seq3,Seq0);', 21: '((Seq3,Seq1),Seq2,Seq0);', 22: '((Seq2,Seq1),Seq3,Seq0);', 23: 'Other', 24: '((Seq3,Seq1),Seq2,Seq0);', 25: 'Other', 26: '(Seq1,(Seq3,Seq2),Seq0);', 27: 'Other', 28: '(Seq1,(Seq3,Seq2),Seq0);', 29: '((Seq2,Seq1),Seq3,Seq0);', 30: '((Seq3,Seq1),Seq2,Seq0);', 31: '((Seq2,Seq1),Seq3,Seq0);', 32: 'Other', 33: 'Other', 34: '(Seq1,(Seq3,Seq2),Seq0);', 35: 'Other', 36: '(Seq1,(Seq3,Seq2),Seq0);', 37: '((Seq2,Seq1),Seq3,Seq0);', 38: '((Seq3,Seq1),Seq2,Seq0);', 39: '((Seq2,Seq1),Seq3,Seq0);', 40: 'Other', 41: 'Other', 42: '(Seq1,(Seq3,Seq2),Seq0);', 43: 'Other', 44: '(Seq1,(Seq3,Seq2),Seq0);', 45: '((Seq2,Seq1),Seq3,Seq0);', 46: '((Seq3,Seq1),Seq2,Seq0);', 47: '((Seq2,Seq1),Seq3,Seq0);', 48: 'Other', 49: '((Seq3,Seq1),Seq2,Seq0);', 50: 'Other', 51: '(Seq1,(Seq3,Seq2),Seq0);', 52: 'Other', 53: '(Seq1,(Seq3,Seq2),Seq0);', 54: '((Seq2,Seq1),Seq3,Seq0);', 55: '((Seq3,Seq1),Seq2,Seq0);', 56: '((Seq2,Seq1),Seq3,Seq0);', 57: 'Other', 58: 'Other', 59: '(Seq1,(Seq3,Seq2),Seq0);', 60: 'Other', 61: '(Seq1,(Seq3,Seq2),Seq0);', 62: '((Seq2,Seq1),Seq3,Seq0);', 63: '((Seq3,Seq1),Seq2,Seq0);', 64: '((Seq2,Seq1),Seq3,Seq0);', 65: 'Other', 66: 'Other', 67: '(Seq1,(Seq3,Seq2),Seq0);', 68: 'Other', 69: '(Seq1,(Seq3,Seq2),Seq0);', 70: '((Seq2,Seq1),Seq3,Seq0);', 71: '((Seq3,Seq1),Seq2,Seq0);', 72: '((Seq2,Seq1),Seq3,Seq0);', 73: 'Other', 74: '((Seq3,Seq1),Seq2,Seq0);', 75: 'Other', 76: '(Seq1,(Seq3,Seq2),Seq0);', 77: 'Other', 78: '(Seq1,(Seq3,Seq2),Seq0);', 79: '((Seq2,Seq1),Seq3,Seq0);', 80: '((Seq3,Seq1),Seq2,Seq0);', 81: '((Seq2,Seq1),Seq3,Seq0);', 82: 'Other', 83: 'Other', 84: '(Seq1,(Seq3,Seq2),Seq0);', 85: 'Other', 86: '(Seq1,(Seq3,Seq2),Seq0);', 87: '((Seq2,Seq1),Seq3,Seq0);', 88: '((Seq3,Seq1),Seq2,Seq0);', 89: '((Seq2,Seq1),Seq3,Seq0);', 90: 'Other', 91: 'Other', 92: '(Seq1,(Seq3,Seq2),Seq0);', 93: 'Other', 94: '(Seq1,(Seq3,Seq2),Seq0);', 95: '((Seq2,Seq1),Seq3,Seq0);', 96: '((Seq3,Seq1),Seq2,Seq0);', 97: '((Seq2,Seq1),Seq3,Seq0);', 98: 'Other', 99: '((Seq3,Seq1),Seq2,Seq0);', 100: 'Other', 101: '(Seq1,(Seq3,Seq2),Seq0);', 102: 'Other', 103: '(Seq1,(Seq3,Seq2),Seq0);', 104: '((Seq2,Seq1),Seq3,Seq0);', 105: '((Seq3,Seq1),Seq2,Seq0);', 106: '((Seq2,Seq1),Seq3,Seq0);', 107: 'Other', 108: 'Other', 109: '(Seq1,(Seq3,Seq2),Seq0);', 110: 'Other', 111: '(Seq1,(Seq3,Seq2),Seq0);', 112: '((Seq2,Seq1),Seq3,Seq0);', 113: '((Seq3,Seq1),Seq2,Seq0);', 114: '((Seq2,Seq1),Seq3,Seq0);', 115: 'Other', 116: 'Other', 117: '(Seq1,(Seq3,Seq2),Seq0);', 118: 'Other', 119: '(Seq1,(Seq3,Seq2),Seq0);', 120: '((Seq2,Seq1),Seq3,Seq0);', 121: '((Seq3,Seq1),Seq2,Seq0);', 122: '((Seq2,Seq1),Seq3,Seq0);', 123: 'Other', 124: '((Seq3,Seq1),Seq2,Seq0);', 125: 'Other', 126: '(Seq1,(Seq3,Seq2),Seq0);', 127: 'Other', 128: '(Seq1,(Seq3,Seq2),Seq0);', 129: '((Seq2,Seq1),Seq3,Seq0);', 130: '((Seq3,Seq1),Seq2,Seq0);', 131: '((Seq2,Seq1),Seq3,Seq0);', 132: 'Other', 133: 'Other', 134: '(Seq1,(Seq3,Seq2),Seq0);', 135: 'Other', 136: '(Seq1,(Seq3,Seq2),Seq0);', 137: '((Seq2,Seq1),Seq3,Seq0);', 138: '((Seq3,Seq1),Seq2,Seq0);', 139: '((Seq2,Seq1),Seq3,Seq0);', 140: 'Other', 141: 'Other', 142: '(Seq1,(Seq3,Seq2),Seq0);', 143: 'Other', 144: '(Seq1,(Seq3,Seq2),Seq0);', 145: '((Seq2,Seq1),Seq3,Seq0);', 146: '((Seq3,Seq1),Seq2,Seq0);', 147: '((Seq2,Seq1),Seq3,Seq0);', 148: 'Other', 149: '((Seq3,Seq1),Seq2,Seq0);', 150: 'Other', 151: '(Seq1,(Seq3,Seq2),Seq0);', 152: 'Other', 153: '(Seq1,(Seq3,Seq2),Seq0);', 154: '((Seq2,Seq1),Seq3,Seq0);', 155: '((Seq3,Seq1),Seq2,Seq0);', 156: '((Seq2,Seq1),Seq3,Seq0);', 157: 'Other', 158: 'Other', 159: '(Seq1,(Seq3,Seq2),Seq0);', 160: 'Other', 161: '(Seq1,(Seq3,Seq2),Seq0);', 162: '((Seq2,Seq1),Seq3,Seq0);', 163: '((Seq3,Seq1),Seq2,Seq0);', 164: '((Seq2,Seq1),Seq3,Seq0);', 165: 'Other', 166: 'Other', 167: '(Seq1,(Seq3,Seq2),Seq0);', 168: 'Other', 169: '(Seq1,(Seq3,Seq2),Seq0);', 170: '((Seq2,Seq1),Seq3,Seq0);', 171: '((Seq3,Seq1),Seq2,Seq0);', 172: '((Seq2,Seq1),Seq3,Seq0);', 173: 'Other', 174: '((Seq3,Seq1),Seq2,Seq0);', 175: 'Other', 176: '(Seq1,(Seq3,Seq2),Seq0);', 177: 'Other', 178: '(Seq1,(Seq3,Seq2),Seq0);', 179: '((Seq2,Seq1),Seq3,Seq0);', 180: '((Seq3,Seq1),Seq2,Seq0);', 181: '((Seq2,Seq1),Seq3,Seq0);', 182: 'Other', 183: 'Other', 184: '(Seq1,(Seq3,Seq2),Seq0);', 185: 'Other', 186: '(Seq1,(Seq3,Seq2),Seq0);', 187: '((Seq2,Seq1),Seq3,Seq0);', 188: '((Seq3,Seq1),Seq2,Seq0);', 189: '((Seq2,Seq1),Seq3,Seq0);', 190: 'Other', 191: 'Other', 192: '(Seq1,(Seq3,Seq2),Seq0);', 193: 'Other', 194: '(Seq1,(Seq3,Seq2),Seq0);', 195: '((Seq2,Seq1),Seq3,Seq0);', 196: '((Seq3,Seq1),Seq2,Seq0);', 197: '((Seq2,Seq1),Seq3,Seq0);', 198: 'Other', 199: '((Seq3,Seq1),Seq2,Seq0);', 200: 'Other', 201: '(Seq1,(Seq3,Seq2),Seq0);', 202: 'Other', 203: '(Seq1,(Seq3,Seq2),Seq0);', 204: '((Seq2,Seq1),Seq3,Seq0);', 205: '((Seq3,Seq1),Seq2,Seq0);', 206: '((Seq2,Seq1),Seq3,Seq0);', 207: 'Other', 208: 'Other', 209: '(Seq1,(Seq3,Seq2),Seq0);', 210: 'Other', 211: '(Seq1,(Seq3,Seq2),Seq0);', 212: '((Seq2,Seq1),Seq3,Seq0);', 213: '((Seq3,Seq1),Seq2,Seq0);', 214: '((Seq2,Seq1),Seq3,Seq0);', 215: 'Other', 216: 'Other', 217: '(Seq1,(Seq3,Seq2),Seq0);', 218: 'Other', 219: '(Seq1,(Seq3,Seq2),Seq0);', 220: '((Seq2,Seq1),Seq3,Seq0);', 221: '((Seq3,Seq1),Seq2,Seq0);', 222: '((Seq2,Seq1),Seq3,Seq0);', 223: 'Other', 224: '((Seq3,Seq1),Seq2,Seq0);', 225: 'Other', 226: '(Seq1,(Seq3,Seq2),Seq0);', 227: 'Other', 228: '(Seq1,(Seq3,Seq2),Seq0);', 229: '((Seq2,Seq1),Seq3,Seq0);', 230: '((Seq3,Seq1),Seq2,Seq0);', 231: '((Seq2,Seq1),Seq3,Seq0);', 232: 'Other', 233: 'Other', 234: '(Seq1,(Seq3,Seq2),Seq0);', 235: 'Other', 236: '(Seq1,(Seq3,Seq2),Seq0);', 237: '((Seq2,Seq1),Seq3,Seq0);', 238: '((Seq3,Seq1),Seq2,Seq0);', 239: '((Seq2,Seq1),Seq3,Seq0);', 240: 'Other', 241: 'Other', 242: '(Seq1,(Seq3,Seq2),Seq0);', 243: 'Other', 244: '(Seq1,(Seq3,Seq2),Seq0);', 245: '((Seq2,Seq1),Seq3,Seq0);', 246: '((Seq3,Seq1),Seq2,Seq0);', 247: '((Seq2,Seq1),Seq3,Seq0);', 248: 'Other', 249: '((Seq3,Seq1),Seq2,Seq0);', 250: 'Other', 251: '(Seq1,(Seq3,Seq2),Seq0);', 252: 'Other', 253: '(Seq1,(Seq3,Seq2),Seq0);', 254: '((Seq2,Seq1),Seq3,Seq0);', 255: '((Seq3,Seq1),Seq2,Seq0);', 256: '((Seq2,Seq1),Seq3,Seq0);', 257: 'Other', 258: 'Other', 259: '(Seq1,(Seq3,Seq2),Seq0);', 260: 'Other', 261: '(Seq1,(Seq3,Seq2),Seq0);', 262: '((Seq2,Seq1),Seq3,Seq0);', 263: '((Seq3,Seq1),Seq2,Seq0);', 264: '((Seq2,Seq1),Seq3,Seq0);', 265: 'Other', 266: 'Other', 267: '(Seq1,(Seq3,Seq2),Seq0);', 268: 'Other', 269: '(Seq1,(Seq3,Seq2),Seq0);', 270: '((Seq2,Seq1),Seq3,Seq0);', 271: '((Seq3,Seq1),Seq2,Seq0);', 272: '((Seq2,Seq1),Seq3,Seq0);', 273: 'Other', 274: '((Seq3,Seq1),Seq2,Seq0);', 275: 'Other', 276: '(Seq1,(Seq3,Seq2),Seq0);', 277: 'Other', 278: '(Seq1,(Seq3,Seq2),Seq0);', 279: '((Seq2,Seq1),Seq3,Seq0);', 280: '((Seq3,Seq1),Seq2,Seq0);', 281: '((Seq2,Seq1),Seq3,Seq0);', 282: 'Other', 283: 'Other', 284: '(Seq1,(Seq3,Seq2),Seq0);', 285: 'Other', 286: '(Seq1,(Seq3,Seq2),Seq0);', 287: '((Seq2,Seq1),Seq3,Seq0);', 288: '((Seq3,Seq1),Seq2,Seq0);', 289: '((Seq2,Seq1),Seq3,Seq0);', 290: 'Other', 291: 'Other', 292: '(Seq1,(Seq3,Seq2),Seq0);', 293: 'Other', 294: '(Seq1,(Seq3,Seq2),Seq0);', 295: '((Seq2,Seq1),Seq3,Seq0);', 296: '((Seq3,Seq1),Seq2,Seq0);', 297: '((Seq2,Seq1),Seq3,Seq0);', 298: 'Other', 299: '((Seq3,Seq1),Seq2,Seq0);', 300: 'Other', 301: '(Seq1,(Seq3,Seq2),Seq0);', 302: 'Other', 303: '(Seq1,(Seq3,Seq2),Seq0);', 304: '((Seq2,Seq1),Seq3,Seq0);', 305: '((Seq3,Seq1),Seq2,Seq0);', 306: '((Seq2,Seq1),Seq3,Seq0);', 307: 'Other', 308: 'Other', 309: '(Seq1,(Seq3,Seq2),Seq0);', 310: 'Other', 311: '(Seq1,(Seq3,Seq2),Seq0);', 312: '((Seq2,Seq1),Seq3,Seq0);', 313: '((Seq3,Seq1),Seq2,Seq0);', 314: '((Seq2,Seq1),Seq3,Seq0);', 315: 'Other', 316: 'Other', 317: '(Seq1,(Seq3,Seq2),Seq0);', 318: 'Other', 319: '(Seq1,(Seq3,Seq2),Seq0);', 320: '((Seq2,Seq1),Seq3,Seq0);', 321: '((Seq3,Seq1),Seq2,Seq0);', 322: '((Seq2,Seq1),Seq3,Seq0);', 323: 'Other', 324: '((Seq3,Seq1),Seq2,Seq0);', 325: 'Other', 326: '(Seq1,(Seq3,Seq2),Seq0);', 327: 'Other', 328: '(Seq1,(Seq3,Seq2),Seq0);', 329: '((Seq2,Seq1),Seq3,Seq0);', 330: '((Seq3,Seq1),Seq2,Seq0);', 331: '((Seq2,Seq1),Seq3,Seq0);', 332: 'Other', 333: 'Other', 334: '(Seq1,(Seq3,Seq2),Seq0);', 335: 'Other', 336: '(Seq1,(Seq3,Seq2),Seq0);', 337: '((Seq2,Seq1),Seq3,Seq0);', 338: '((Seq3,Seq1),Seq2,Seq0);', 339: '((Seq2,Seq1),Seq3,Seq0);', 340: 'Other', 341: 'Other', 342: '(Seq1,(Seq3,Seq2),Seq0);', 343: 'Other', 344: '(Seq1,(Seq3,Seq2),Seq0);', 345: '((Seq2,Seq1),Seq3,Seq0);', 346: '((Seq3,Seq1),Seq2,Seq0);', 347: '((Seq2,Seq1),Seq3,Seq0);', 348: 'Other', 349: '((Seq3,Seq1),Seq2,Seq0);', 350: 'Other', 351: '(Seq1,(Seq3,Seq2),Seq0);', 352: 'Other', 353: '(Seq1,(Seq3,Seq2),Seq0);', 354: '((Seq2,Seq1),Seq3,Seq0);', 355: '((Seq3,Seq1),Seq2,Seq0);', 356: '((Seq2,Seq1),Seq3,Seq0);', 357: 'Other', 358: 'Other', 359: '(Seq1,(Seq3,Seq2),Seq0);', 360: 'Other', 361: '(Seq1,(Seq3,Seq2),Seq0);', 362: '((Seq2,Seq1),Seq3,Seq0);', 363: '((Seq3,Seq1),Seq2,Seq0);', 364: '((Seq2,Seq1),Seq3,Seq0);', 365: 'Other', 366: 'Other', 367: '(Seq1,(Seq3,Seq2),Seq0);', 368: 'Other', 369: '(Seq1,(Seq3,Seq2),Seq0);', 370: '((Seq2,Seq1),Seq3,Seq0);', 371: '((Seq3,Seq1),Seq2,Seq0);', 372: '((Seq2,Seq1),Seq3,Seq0);', 373: 'Other', 374: '((Seq3,Seq1),Seq2,Seq0);', 375: 'Other', 376: '(Seq1,(Seq3,Seq2),Seq0);', 377: 'Other', 378: '(Seq1,(Seq3,Seq2),Seq0);', 379: '((Seq2,Seq1),Seq3,Seq0);', 380: '((Seq3,Seq1),Seq2,Seq0);', 381: '((Seq2,Seq1),Seq3,Seq0);', 382: 'Other', 383: 'Other', 384: '(Seq1,(Seq3,Seq2),Seq0);', 385: 'Other', 386: '(Seq1,(Seq3,Seq2),Seq0);', 387: '((Seq2,Seq1),Seq3,Seq0);', 388: '((Seq3,Seq1),Seq2,Seq0);', 389: '((Seq2,Seq1),Seq3,Seq0);', 390: 'Other', 391: 'Other', 392: '(Seq1,(Seq3,Seq2),Seq0);', 393: 'Other', 394: '(Seq1,(Seq3,Seq2),Seq0);', 395: '((Seq2,Seq1),Seq3,Seq0);', 396: '((Seq3,Seq1),Seq2,Seq0);', 397: '((Seq2,Seq1),Seq3,Seq0);', 398: 'Other', 399: '((Seq3,Seq1),Seq2,Seq0);', 400: 'Other', 401: '(Seq1,(Seq3,Seq2),Seq0);', 402: 'Other', 403: '(Seq1,(Seq3,Seq2),Seq0);', 404: '((Seq2,Seq1),Seq3,Seq0);', 405: '((Seq3,Seq1),Seq2,Seq0);', 406: '((Seq2,Seq1),Seq3,Seq0);', 407: 'Other', 408: 'Other', 409: '(Seq1,(Seq3,Seq2),Seq0);', 410: 'Other', 411: '(Seq1,(Seq3,Seq2),Seq0);', 412: '((Seq2,Seq1),Seq3,Seq0);', 413: '((Seq3,Seq1),Seq2,Seq0);', 414: '((Seq2,Seq1),Seq3,Seq0);', 415: 'Other', 416: 'Other', 417: '(Seq1,(Seq3,Seq2),Seq0);', 418: 'Other', 419: '(Seq1,(Seq3,Seq2),Seq0);', 420: '((Seq2,Seq1),Seq3,Seq0);', 421: '((Seq3,Seq1),Seq2,Seq0);', 422: '((Seq2,Seq1),Seq3,Seq0);', 423: 'Other', 424: '((Seq3,Seq1),Seq2,Seq0);', 425: 'Other', 426: '(Seq1,(Seq3,Seq2),Seq0);', 427: 'Other', 428: '(Seq1,(Seq3,Seq2),Seq0);', 429: '((Seq2,Seq1),Seq3,Seq0);', 430: '((Seq3,Seq1),Seq2,Seq0);', 431: '((Seq2,Seq1),Seq3,Seq0);', 432: 'Other', 433: 'Other', 434: '(Seq1,(Seq3,Seq2),Seq0);', 435: 'Other', 436: '(Seq1,(Seq3,Seq2),Seq0);', 437: '((Seq2,Seq1),Seq3,Seq0);', 438: '((Seq3,Seq1),Seq2,Seq0);', 439: '((Seq2,Seq1),Seq3,Seq0);', 440: 'Other', 441: 'Other', 442: '(Seq1,(Seq3,Seq2),Seq0);', 443: 'Other', 444: '(Seq1,(Seq3,Seq2),Seq0);', 445: '((Seq2,Seq1),Seq3,Seq0);', 446: '((Seq3,Seq1),Seq2,Seq0);', 447: '((Seq2,Seq1),Seq3,Seq0);', 448: 'Other', 449: '((Seq3,Seq1),Seq2,Seq0);', 450: 'Other', 451: '(Seq1,(Seq3,Seq2),Seq0);', 452: 'Other', 453: '(Seq1,(Seq3,Seq2),Seq0);', 454: '((Seq2,Seq1),Seq3,Seq0);', 455: '((Seq3,Seq1),Seq2,Seq0);', 456: '((Seq2,Seq1),Seq3,Seq0);', 457: 'Other', 458: 'Other', 459: '(Seq1,(Seq3,Seq2),Seq0);', 460: 'Other', 461: '(Seq1,(Seq3,Seq2),Seq0);', 462: '((Seq2,Seq1),Seq3,Seq0);', 463: '((Seq3,Seq1),Seq2,Seq0);', 464: '((Seq2,Seq1),Seq3,Seq0);', 465: 'Other', 466: 'Other', 467: '(Seq1,(Seq3,Seq2),Seq0);', 468: 'Other', 469: '(Seq1,(Seq3,Seq2),Seq0);', 470: '((Seq2,Seq1),Seq3,Seq0);', 471: '((Seq3,Seq1),Seq2,Seq0);', 472: '((Seq2,Seq1),Seq3,Seq0);', 473: 'Other', 474: '((Seq3,Seq1),Seq2,Seq0);', 475: 'Other', 476: '(Seq1,(Seq3,Seq2),Seq0);', 477: 'Other', 478: '(Seq1,(Seq3,Seq2),Seq0);', 479: '((Seq2,Seq1),Seq3,Seq0);', 480: '((Seq3,Seq1),Seq2,Seq0);', 481: '((Seq2,Seq1),Seq3,Seq0);', 482: 'Other', 483: 'Other', 484: '(Seq1,(Seq3,Seq2),Seq0);', 485: 'Other', 486: '(Seq1,(Seq3,Seq2),Seq0);', 487: '((Seq2,Seq1),Seq3,Seq0);', 488: '((Seq3,Seq1),Seq2,Seq0);', 489: '((Seq2,Seq1),Seq3,Seq0);', 490: 'Other', 491: 'Other', 492: '(Seq1,(Seq3,Seq2),Seq0);', 493: 'Other', 494: '(Seq1,(Seq3,Seq2),Seq0);', 495: '((Seq2,Seq1),Seq3,Seq0);', 496: '((Seq3,Seq1),Seq2,Seq0);', 497: '((Seq2,Seq1),Seq3,Seq0);', 498: 'Other', 499: '((Seq3,Seq1),Seq2,Seq0);', 500: 'Other', 501: '(Seq1,(Seq3,Seq2),Seq0);', 502: 'Other', 503: '(Seq1,(Seq3,Seq2),Seq0);', 504: '((Seq2,Seq1),Seq3,Seq0);', 505: '((Seq3,Seq1),Seq2,Seq0);', 506: '((Seq2,Seq1),Seq3,Seq0);', 507: 'Other', 508: 'Other', 509: '(Seq1,(Seq3,Seq2),Seq0);', 510: 'Other', 511: '(Seq1,(Seq3,Seq2),Seq0);', 512: '((Seq2,Seq1),Seq3,Seq0);', 513: '((Seq3,Seq1),Seq2,Seq0);', 514: '((Seq2,Seq1),Seq3,Seq0);', 515: 'Other', 516: 'Other', 517: '(Seq1,(Seq3,Seq2),Seq0);', 518: 'Other', 519: '(Seq1,(Seq3,Seq2),Seq0);', 520: '((Seq2,Seq1),Seq3,Seq0);', 521: '((Seq3,Seq1),Seq2,Seq0);', 522: '((Seq2,Seq1),Seq3,Seq0);', 523: 'Other', 524: '((Seq3,Seq1),Seq2,Seq0);', 525: 'Other', 526: '(Seq1,(Seq3,Seq2),Seq0);', 527: 'Other', 528: '(Seq1,(Seq3,Seq2),Seq0);', 529: '((Seq2,Seq1),Seq3,Seq0);', 530: '((Seq3,Seq1),Seq2,Seq0);', 531: '((Seq2,Seq1),Seq3,Seq0);', 532: 'Other', 533: 'Other', 534: '(Seq1,(Seq3,Seq2),Seq0);', 535: 'Other', 536: '(Seq1,(Seq3,Seq2),Seq0);', 537: '((Seq2,Seq1),Seq3,Seq0);', 538: '((Seq3,Seq1),Seq2,Seq0);', 539: '((Seq2,Seq1),Seq3,Seq0);', 540: 'Other', 541: 'Other', 542: '(Seq1,(Seq3,Seq2),Seq0);', 543: 'Other', 544: '(Seq1,(Seq3,Seq2),Seq0);', 545: '((Seq2,Seq1),Seq3,Seq0);', 546: '((Seq3,Seq1),Seq2,Seq0);', 547: '((Seq2,Seq1),Seq3,Seq0);', 548: 'Other', 549: '((Seq3,Seq1),Seq2,Seq0);', 550: 'Other', 551: '(Seq1,(Seq3,Seq2),Seq0);', 552: 'Other', 553: '(Seq1,(Seq3,Seq2),Seq0);', 554: '((Seq2,Seq1),Seq3,Seq0);', 555: '((Seq3,Seq1),Seq2,Seq0);', 556: '((Seq2,Seq1),Seq3,Seq0);', 557: 'Other', 558: 'Other', 559: '(Seq1,(Seq3,Seq2),Seq0);', 560: 'Other', 561: '(Seq1,(Seq3,Seq2),Seq0);', 562: '((Seq2,Seq1),Seq3,Seq0);', 563: '((Seq3,Seq1),Seq2,Seq0);', 564: '((Seq2,Seq1),Seq3,Seq0);', 565: 'Other', 566: 'Other', 567: '(Seq1,(Seq3,Seq2),Seq0);', 568: 'Other', 569: '(Seq1,(Seq3,Seq2),Seq0);', 570: '((Seq2,Seq1),Seq3,Seq0);', 571: '((Seq3,Seq1),Seq2,Seq0);', 572: '((Seq2,Seq1),Seq3,Seq0);', 573: 'Other', 574: '((Seq3,Seq1),Seq2,Seq0);', 575: 'Other', 576: '(Seq1,(Seq3,Seq2),Seq0);', 577: 'Other', 578: '(Seq1,(Seq3,Seq2),Seq0);', 579: '((Seq2,Seq1),Seq3,Seq0);', 580: '((Seq3,Seq1),Seq2,Seq0);', 581: '((Seq2,Seq1),Seq3,Seq0);', 582: 'Other', 583: 'Other', 584: '(Seq1,(Seq3,Seq2),Seq0);', 585: 'Other', 586: '(Seq1,(Seq3,Seq2),Seq0);', 587: '((Seq2,Seq1),Seq3,Seq0);', 588: '((Seq3,Seq1),Seq2,Seq0);', 589: '((Seq2,Seq1),Seq3,Seq0);', 590: 'Other', 591: 'Other', 592: '(Seq1,(Seq3,Seq2),Seq0);', 593: 'Other', 594: '(Seq1,(Seq3,Seq2),Seq0);', 595: '((Seq2,Seq1),Seq3,Seq0);', 596: '((Seq3,Seq1),Seq2,Seq0);', 597: '((Seq2,Seq1),Seq3,Seq0);', 598: 'Other', 599: '((Seq3,Seq1),Seq2,Seq0);', 600: 'Other', 601: '(Seq1,(Seq3,Seq2),Seq0);', 602: 'Other', 603: '(Seq1,(Seq3,Seq2),Seq0);', 604: '((Seq2,Seq1),Seq3,Seq0);', 605: '((Seq3,Seq1),Seq2,Seq0);', 606: '((Seq2,Seq1),Seq3,Seq0);', 607: 'Other', 608: 'Other', 609: '(Seq1,(Seq3,Seq2),Seq0);', 610: 'Other', 611: '(Seq1,(Seq3,Seq2),Seq0);', 612: '((Seq2,Seq1),Seq3,Seq0);', 613: '((Seq3,Seq1),Seq2,Seq0);', 614: '((Seq2,Seq1),Seq3,Seq0);', 615: 'Other', 616: 'Other', 617: '(Seq1,(Seq3,Seq2),Seq0);', 618: 'Other', 619: '(Seq1,(Seq3,Seq2),Seq0);', 620: '((Seq2,Seq1),Seq3,Seq0);', 621: '((Seq3,Seq1),Seq2,Seq0);', 622: '((Seq2,Seq1),Seq3,Seq0);', 623: 'Other', 624: '((Seq3,Seq1),Seq2,Seq0);', 625: 'Other', 626: '(Seq1,(Seq3,Seq2),Seq0);', 627: 'Other', 628: '(Seq1,(Seq3,Seq2),Seq0);', 629: '((Seq2,Seq1),Seq3,Seq0);', 630: '((Seq3,Seq1),Seq2,Seq0);', 631: '((Seq2,Seq1),Seq3,Seq0);', 632: 'Other', 633: 'Other', 634: '(Seq1,(Seq3,Seq2),Seq0);', 635: 'Other', 636: '(Seq1,(Seq3,Seq2),Seq0);', 637: '((Seq2,Seq1),Seq3,Seq0);', 638: '((Seq3,Seq1),Seq2,Seq0);', 639: '((Seq2,Seq1),Seq3,Seq0);', 640: 'Other', 641: 'Other', 642: '(Seq1,(Seq3,Seq2),Seq0);', 643: 'Other', 644: '(Seq1,(Seq3,Seq2),Seq0);', 645: '((Seq2,Seq1),Seq3,Seq0);', 646: '((Seq3,Seq1),Seq2,Seq0);', 647: '((Seq2,Seq1),Seq3,Seq0);', 648: 'Other', 649: '((Seq3,Seq1),Seq2,Seq0);', 650: 'Other', 651: '(Seq1,(Seq3,Seq2),Seq0);', 652: 'Other', 653: '(Seq1,(Seq3,Seq2),Seq0);', 654: '((Seq2,Seq1),Seq3,Seq0);', 655: '((Seq3,Seq1),Seq2,Seq0);', 656: '((Seq2,Seq1),Seq3,Seq0);', 657: 'Other', 658: 'Other', 659: '(Seq1,(Seq3,Seq2),Seq0);', 660: 'Other', 661: '(Seq1,(Seq3,Seq2),Seq0);', 662: '((Seq2,Seq1),Seq3,Seq0);', 663: '((Seq3,Seq1),Seq2,Seq0);', 664: '((Seq2,Seq1),Seq3,Seq0);', 665: 'Other', 666: 'Other', 667: '(Seq1,(Seq3,Seq2),Seq0);', 668: 'Other', 669: '(Seq1,(Seq3,Seq2),Seq0);', 670: '((Seq2,Seq1),Seq3,Seq0);', 671: '((Seq3,Seq1),Seq2,Seq0);', 672: '((Seq2,Seq1),Seq3,Seq0);', 673: 'Other', 674: '((Seq3,Seq1),Seq2,Seq0);', 675: 'Other', 676: '(Seq1,(Seq3,Seq2),Seq0);', 677: 'Other', 678: '(Seq1,(Seq3,Seq2),Seq0);', 679: '((Seq2,Seq1),Seq3,Seq0);', 680: '((Seq3,Seq1),Seq2,Seq0);', 681: '((Seq2,Seq1),Seq3,Seq0);', 682: 'Other', 683: 'Other', 684: '(Seq1,(Seq3,Seq2),Seq0);', 685: 'Other', 686: '(Seq1,(Seq3,Seq2),Seq0);', 687: '((Seq2,Seq1),Seq3,Seq0);', 688: '((Seq3,Seq1),Seq2,Seq0);', 689: '((Seq2,Seq1),Seq3,Seq0);', 690: 'Other', 691: 'Other', 692: '(Seq1,(Seq3,Seq2),Seq0);', 693: 'Other', 694: '(Seq1,(Seq3,Seq2),Seq0);', 695: '((Seq2,Seq1),Seq3,Seq0);', 696: '((Seq3,Seq1),Seq2,Seq0);', 697: '((Seq2,Seq1),Seq3,Seq0);', 698: 'Other', 699: '((Seq3,Seq1),Seq2,Seq0);', 700: 'Other', 701: '(Seq1,(Seq3,Seq2),Seq0);', 702: 'Other', 703: '(Seq1,(Seq3,Seq2),Seq0);', 704: '((Seq2,Seq1),Seq3,Seq0);', 705: '((Seq3,Seq1),Seq2,Seq0);', 706: '((Seq2,Seq1),Seq3,Seq0);', 707: 'Other', 708: 'Other', 709: '(Seq1,(Seq3,Seq2),Seq0);', 710: 'Other', 711: '(Seq1,(Seq3,Seq2),Seq0);', 712: '((Seq2,Seq1),Seq3,Seq0);', 713: '((Seq3,Seq1),Seq2,Seq0);', 714: '((Seq2,Seq1),Seq3,Seq0);', 715: 'Other', 716: 'Other', 717: '(Seq1,(Seq3,Seq2),Seq0);', 718: 'Other', 719: '(Seq1,(Seq3,Seq2),Seq0);', 720: '((Seq2,Seq1),Seq3,Seq0);', 721: '((Seq3,Seq1),Seq2,Seq0);', 722: '((Seq2,Seq1),Seq3,Seq0);', 723: 'Other', 724: '((Seq3,Seq1),Seq2,Seq0);', 725: 'Other', 726: '(Seq1,(Seq3,Seq2),Seq0);', 727: 'Other', 728: '(Seq1,(Seq3,Seq2),Seq0);', 729: '((Seq2,Seq1),Seq3,Seq0);', 730: '((Seq3,Seq1),Seq2,Seq0);', 731: '((Seq2,Seq1),Seq3,Seq0);', 732: 'Other', 733: 'Other', 734: '(Seq1,(Seq3,Seq2),Seq0);', 735: 'Other', 736: '(Seq1,(Seq3,Seq2),Seq0);', 737: '((Seq2,Seq1),Seq3,Seq0);', 738: '((Seq3,Seq1),Seq2,Seq0);', 739: '((Seq2,Seq1),Seq3,Seq0);', 740: 'Other', 741: 'Other', 742: '(Seq1,(Seq3,Seq2),Seq0);', 743: 'Other', 744: '(Seq1,(Seq3,Seq2),Seq0);', 745: '((Seq2,Seq1),Seq3,Seq0);', 746: '((Seq3,Seq1),Seq2,Seq0);', 747: '((Seq2,Seq1),Seq3,Seq0);', 748: 'Other', 749: '((Seq3,Seq1),Seq2,Seq0);', 750: 'Other', 751: '(Seq1,(Seq3,Seq2),Seq0);', 752: 'Other', 753: '(Seq1,(Seq3,Seq2),Seq0);', 754: '((Seq2,Seq1),Seq3,Seq0);', 755: '((Seq3,Seq1),Seq2,Seq0);', 756: '((Seq2,Seq1),Seq3,Seq0);', 757: 'Other', 758: 'Other', 759: '(Seq1,(Seq3,Seq2),Seq0);', 760: 'Other', 761: '(Seq1,(Seq3,Seq2),Seq0);', 762: '((Seq2,Seq1),Seq3,Seq0);', 763: '((Seq3,Seq1),Seq2,Seq0);', 764: '((Seq2,Seq1),Seq3,Seq0);', 765: 'Other', 766: 'Other', 767: '(Seq1,(Seq3,Seq2),Seq0);', 768: 'Other', 769: '(Seq1,(Seq3,Seq2),Seq0);', 770: '((Seq2,Seq1),Seq3,Seq0);', 771: '((Seq3,Seq1),Seq2,Seq0);', 772: '((Seq2,Seq1),Seq3,Seq0);', 773: 'Other', 774: '((Seq3,Seq1),Seq2,Seq0);', 775: 'Other', 776: '(Seq1,(Seq3,Seq2),Seq0);', 777: 'Other', 778: '(Seq1,(Seq3,Seq2),Seq0);', 779: '((Seq2,Seq1),Seq3,Seq0);', 780: '((Seq3,Seq1),Seq2,Seq0);', 781: '((Seq2,Seq1),Seq3,Seq0);', 782: 'Other', 783: 'Other', 784: '(Seq1,(Seq3,Seq2),Seq0);', 785: 'Other', 786: '(Seq1,(Seq3,Seq2),Seq0);', 787: '((Seq2,Seq1),Seq3,Seq0);', 788: '((Seq3,Seq1),Seq2,Seq0);', 789: '((Seq2,Seq1),Seq3,Seq0);', 790: 'Other', 791: 'Other', 792: '(Seq1,(Seq3,Seq2),Seq0);', 793: 'Other', 794: '(Seq1,(Seq3,Seq2),Seq0);', 795: '((Seq2,Seq1),Seq3,Seq0);', 796: '((Seq3,Seq1),Seq2,Seq0);', 797: '((Seq2,Seq1),Seq3,Seq0);', 798: 'Other', 799: '((Seq3,Seq1),Seq2,Seq0);', 800: 'Other', 801: '(Seq1,(Seq3,Seq2),Seq0);', 802: 'Other', 803: '(Seq1,(Seq3,Seq2),Seq0);', 804: '((Seq2,Seq1),Seq3,Seq0);', 805: '((Seq3,Seq1),Seq2,Seq0);', 806: '((Seq2,Seq1),Seq3,Seq0);', 807: 'Other', 808: 'Other', 809: '(Seq1,(Seq3,Seq2),Seq0);', 810: 'Other', 811: '(Seq1,(Seq3,Seq2),Seq0);', 812: '((Seq2,Seq1),Seq3,Seq0);', 813: '((Seq3,Seq1),Seq2,Seq0);', 814: '((Seq2,Seq1),Seq3,Seq0);', 815: 'Other', 816: 'Other', 817: '(Seq1,(Seq3,Seq2),Seq0);', 818: 'Other', 819: '(Seq1,(Seq3,Seq2),Seq0);', 820: '((Seq2,Seq1),Seq3,Seq0);', 821: '((Seq3,Seq1),Seq2,Seq0);', 822: '((Seq2,Seq1),Seq3,Seq0);', 823: 'Other', 824: '((Seq3,Seq1),Seq2,Seq0);', 825: 'Other', 826: '(Seq1,(Seq3,Seq2),Seq0);', 827: 'Other', 828: '(Seq1,(Seq3,Seq2),Seq0);', 829: '((Seq2,Seq1),Seq3,Seq0);', 830: '((Seq3,Seq1),Seq2,Seq0);', 831: '((Seq2,Seq1),Seq3,Seq0);', 832: 'Other', 833: 'Other', 834: '(Seq1,(Seq3,Seq2),Seq0);', 835: 'Other', 836: '(Seq1,(Seq3,Seq2),Seq0);', 837: '((Seq2,Seq1),Seq3,Seq0);', 838: '((Seq3,Seq1),Seq2,Seq0);', 839: '((Seq2,Seq1),Seq3,Seq0);', 840: 'Other', 841: 'Other', 842: '(Seq1,(Seq3,Seq2),Seq0);', 843: 'Other', 844: '(Seq1,(Seq3,Seq2),Seq0);', 845: '((Seq2,Seq1),Seq3,Seq0);', 846: '((Seq3,Seq1),Seq2,Seq0);', 847: '((Seq2,Seq1),Seq3,Seq0);', 848: 'Other', 849: '((Seq3,Seq1),Seq2,Seq0);', 850: 'Other', 851: '(Seq1,(Seq3,Seq2),Seq0);', 852: 'Other', 853: '(Seq1,(Seq3,Seq2),Seq0);', 854: '((Seq2,Seq1),Seq3,Seq0);', 855: '((Seq3,Seq1),Seq2,Seq0);', 856: '((Seq2,Seq1),Seq3,Seq0);', 857: 'Other', 858: 'Other', 859: '(Seq1,(Seq3,Seq2),Seq0);', 860: 'Other', 861: '(Seq1,(Seq3,Seq2),Seq0);', 862: '((Seq2,Seq1),Seq3,Seq0);', 863: '((Seq3,Seq1),Seq2,Seq0);', 864: '((Seq2,Seq1),Seq3,Seq0);', 865: 'Other', 866: 'Other', 867: '(Seq1,(Seq3,Seq2),Seq0);', 868: 'Other', 869: '(Seq1,(Seq3,Seq2),Seq0);', 870: '((Seq2,Seq1),Seq3,Seq0);', 871: '((Seq3,Seq1),Seq2,Seq0);', 872: '((Seq2,Seq1),Seq3,Seq0);', 873: 'Other', 874: '((Seq3,Seq1),Seq2,Seq0);', 875: 'Other', 876: '(Seq1,(Seq3,Seq2),Seq0);', 877: 'Other', 878: '(Seq1,(Seq3,Seq2),Seq0);', 879: '((Seq2,Seq1),Seq3,Seq0);', 880: '((Seq3,Seq1),Seq2,Seq0);', 881: '((Seq2,Seq1),Seq3,Seq0);', 882: 'Other', 883: 'Other', 884: '(Seq1,(Seq3,Seq2),Seq0);', 885: 'Other', 886: '(Seq1,(Seq3,Seq2),Seq0);', 887: '((Seq2,Seq1),Seq3,Seq0);', 888: '((Seq3,Seq1),Seq2,Seq0);', 889: '((Seq2,Seq1),Seq3,Seq0);', 890: 'Other', 891: 'Other', 892: '(Seq1,(Seq3,Seq2),Seq0);', 893: 'Other', 894: '(Seq1,(Seq3,Seq2),Seq0);', 895: '((Seq2,Seq1),Seq3,Seq0);', 896: '((Seq3,Seq1),Seq2,Seq0);', 897: '((Seq2,Seq1),Seq3,Seq0);', 898: 'Other', 899: '((Seq3,Seq1),Seq2,Seq0);', 900: 'Other', 901: '(Seq1,(Seq3,Seq2),Seq0);', 902: 'Other', 903: '(Seq1,(Seq3,Seq2),Seq0);', 904: '((Seq2,Seq1),Seq3,Seq0);', 905: '((Seq3,Seq1),Seq2,Seq0);', 906: '((Seq2,Seq1),Seq3,Seq0);', 907: 'Other', 908: 'Other', 909: '(Seq1,(Seq3,Seq2),Seq0);', 910: 'Other', 911: '(Seq1,(Seq3,Seq2),Seq0);', 912: '((Seq2,Seq1),Seq3,Seq0);', 913: '((Seq3,Seq1),Seq2,Seq0);', 914: '((Seq2,Seq1),Seq3,Seq0);', 915: 'Other', 916: 'Other', 917: '(Seq1,(Seq3,Seq2),Seq0);', 918: 'Other', 919: '(Seq1,(Seq3,Seq2),Seq0);', 920: '((Seq2,Seq1),Seq3,Seq0);', 921: '((Seq3,Seq1),Seq2,Seq0);', 922: '((Seq2,Seq1),Seq3,Seq0);', 923: 'Other', 924: '((Seq3,Seq1),Seq2,Seq0);', 925: 'Other', 926: '(Seq1,(Seq3,Seq2),Seq0);', 927: 'Other', 928: '(Seq1,(Seq3,Seq2),Seq0);', 929: '((Seq2,Seq1),Seq3,Seq0);', 930: '((Seq3,Seq1),Seq2,Seq0);', 931: '((Seq2,Seq1),Seq3,Seq0);', 932: 'Other', 933: 'Other', 934: '(Seq1,(Seq3,Seq2),Seq0);', 935: 'Other', 936: '(Seq1,(Seq3,Seq2),Seq0);', 937: '((Seq2,Seq1),Seq3,Seq0);', 938: '((Seq3,Seq1),Seq2,Seq0);', 939: '((Seq2,Seq1),Seq3,Seq0);', 940: 'Other', 941: 'Other', 942: '(Seq1,(Seq3,Seq2),Seq0);', 943: 'Other', 944: '(Seq1,(Seq3,Seq2),Seq0);', 945: '((Seq2,Seq1),Seq3,Seq0);', 946: '((Seq3,Seq1),Seq2,Seq0);', 947: '((Seq2,Seq1),Seq3,Seq0);', 948: 'Other', 949: '((Seq3,Seq1),Seq2,Seq0);', 950: 'Other', 951: '(Seq1,(Seq3,Seq2),Seq0);', 952: 'Other', 953: '(Seq1,(Seq3,Seq2),Seq0);', 954: '((Seq2,Seq1),Seq3,Seq0);', 955: '((Seq3,Seq1),Seq2,Seq0);', 956: '((Seq2,Seq1),Seq3,Seq0);', 957: 'Other', 958: 'Other', 959: '(Seq1,(Seq3,Seq2),Seq0);', 960: 'Other', 961: '(Seq1,(Seq3,Seq2),Seq0);', 962: '((Seq2,Seq1),Seq3,Seq0);', 963: '((Seq3,Seq1),Seq2,Seq0);', 964: '((Seq2,Seq1),Seq3,Seq0);', 965: 'Other', 966: 'Other', 967: '(Seq1,(Seq3,Seq2),Seq0);', 968: 'Other', 969: '(Seq1,(Seq3,Seq2),Seq0);', 970: '((Seq2,Seq1),Seq3,Seq0);', 971: '((Seq3,Seq1),Seq2,Seq0);', 972: '((Seq2,Seq1),Seq3,Seq0);', 973: 'Other', 974: '((Seq3,Seq1),Seq2,Seq0);', 975: 'Other', 976: '(Seq1,(Seq3,Seq2),Seq0);', 977: 'Other', 978: '(Seq1,(Seq3,Seq2),Seq0);', 979: '((Seq2,Seq1),Seq3,Seq0);', 980: '((Seq3,Seq1),Seq2,Seq0);', 981: '((Seq2,Seq1),Seq3,Seq0);', 982: 'Other', 983: 'Other', 984: '(Seq1,(Seq3,Seq2),Seq0);', 985: 'Other', 986: '(Seq1,(Seq3,Seq2),Seq0);', 987: '((Seq2,Seq1),Seq3,Seq0);', 988: '((Seq3,Seq1),Seq2,Seq0);', 989: '((Seq2,Seq1),Seq3,Seq0);', 990: 'Other', 991: 'Other', 992: '(Seq1,(Seq3,Seq2),Seq0);', 993: 'Other', 994: '(Seq1,(Seq3,Seq2),Seq0);', 995: '((Seq2,Seq1),Seq3,Seq0);', 996: '((Seq3,Seq1),Seq2,Seq0);', 997: '((Seq2,Seq1),Seq3,Seq0);', 998: 'Other', 999: '((Seq3,Seq1),Seq2,Seq0);'}
    # e = {'Other': '#ff0000', '(Seq1,(Seq3,Seq2),Seq0);': '#0000ff', '((Seq3,Seq1),Seq2,Seq0);': '#32cd32', '((Seq2,Seq1),Seq3,Seq0);': '#ffff00'}
    # g = 3

    # generateCircleGraph(g, d.items(), e, 0, 0)

    # h = {0: 'Other', 1: 'Other', 2: 'Other', 3: 'Other', 4: 'Other', 5: 'Other', 6: 'Other', 7: 'Other', 8: 'Other', 9: 'Other', 10: 'Other', 11: 'Other', 12: 'Other', 13: 'Other', 14: 'Other', 15: 'Other', 16: 'Other', 17: 'Other', 18: 'Other', 19: 'Other', 20: 'Other', 21: 'Other', 22: 'Other', 23: 'Other', 24: 'Other', 25: 'Other', 26: 'Other', 27: 'Other', 28: 'Other', 29: 'Other', 30: 'Other', 31: 'Other', 32: 'Other', 33: 'Other', 34: 'Other', 35: 'Other', 36: 'Other', 37: 'Other', 38: 'Other', 39: 'Other', 40: 'Other', 41: 'Other', 42: 'Other', 43: 'Other', 44: 'Other', 45: 'Other', 46: 'Other', 47: 'Other', 48: 'Other', 49: 'Other', 50: 'Other', 51: 'Other', 52: 'Other', 53: 'Other', 54: 'Other', 55: 'Other', 56: 'Other', 57: 'Other', 58: 'Other', 59: 'Other', 60: 'Other', 61: 'Other', 62: 'Other', 63: 'Other', 64: 'Other', 65: 'Other', 66: 'Other', 67: 'Other', 68: 'Other', 69: 'Other', 70: 'Other', 71: 'Other', 72: 'Other', 73: 'Other', 74: 'Other', 75: 'Other', 76: 'Other', 77: 'Other', 78: 'Other', 79: 'Other', 80: 'Other', 81: 'Other', 82: 'Other', 83: 'Other', 84: '(((seq3,(((seq6,seq9),((seq8,seq2),seq7)),seq1)),seq5),seq4,seq0);', 85: 'Other', 86: 'Other', 87: 'Other', 88: 'Other', 89: 'Other', 90: 'Other', 91: 'Other', 92: 'Other', 93: 'Other', 94: 'Other', 95: 'Other', 96: 'Other', 97: 'Other', 98: 'Other', 99: 'Other', 100: 'Other', 101: 'Other', 102: 'Other', 103: 'Other', 104: 'Other', 105: 'Other', 106: 'Other', 107: 'Other', 108: 'Other', 109: 'Other', 110: 'Other', 111: 'Other', 112: 'Other', 113: 'Other', 114: 'Other', 115: 'Other', 116: 'Other', 117: 'Other', 118: 'Other', 119: 'Other', 120: 'Other', 121: 'Other', 122: 'Other', 123: 'Other', 124: 'Other', 125: 'Other', 126: 'Other', 127: 'Other', 128: 'Other', 129: 'Other', 130: 'Other', 131: 'Other', 132: 'Other', 133: '(seq9,((seq8,(seq5,(seq2,((seq1,seq7),seq4)))),(seq3,seq6)),seq0);', 134: 'Other', 135: 'Other', 136: 'Other', 137: 'Other', 138: 'Other', 139: 'Other', 140: 'Other', 141: 'Other', 142: 'Other', 143: 'Other', 144: 'Other', 145: 'Other', 146: 'Other', 147: 'Other', 148: 'Other', 149: 'Other', 150: 'Other', 151: 'Other', 152: 'Other', 153: 'Other', 154: 'Other', 155: 'Other', 156: 'Other', 157: 'Other', 158: 'Other', 159: 'Other', 160: 'Other', 161: 'Other', 162: 'Other', 163: 'Other', 164: 'Other', 165: 'Other', 166: 'Other', 167: 'Other', 168: 'Other', 169: 'Other', 170: 'Other', 171: 'Other', 172: 'Other', 173: 'Other', 174: 'Other', 175: 'Other', 176: 'Other', 177: 'Other', 178: 'Other', 179: 'Other', 180: 'Other', 181: 'Other', 182: 'Other', 183: 'Other', 184: 'Other', 185: 'Other', 186: 'Other', 187: 'Other', 188: 'Other', 189: 'Other', 190: 'Other', 191: 'Other', 192: 'Other', 193: 'Other', 194: 'Other', 195: 'Other', 196: 'Other', 197: 'Other', 198: 'Other', 199: 'Other', 200: 'Other', 201: 'Other', 202: 'Other', 203: 'Other', 204: 'Other', 205: 'Other', 206: 'Other', 207: 'Other', 208: 'Other', 209: 'Other', 210: 'Other', 211: 'Other', 212: 'Other', 213: 'Other', 214: 'Other', 215: 'Other', 216: 'Other', 217: 'Other', 218: 'Other', 219: 'Other', 220: '(seq6,(seq5,((seq1,((seq3,seq4),((seq7,seq9),seq2))),seq8)),seq0);', 221: 'Other', 222: 'Other', 223: 'Other', 224: 'Other', 225: 'Other', 226: 'Other', 227: 'Other', 228: 'Other', 229: 'Other', 230: 'Other', 231: 'Other', 232: 'Other', 233: 'Other', 234: 'Other', 235: 'Other', 236: 'Other', 237: 'Other', 238: 'Other', 239: 'Other', 240: 'Other', 241: 'Other', 242: 'Other', 243: 'Other', 244: 'Other', 245: 'Other', 246: 'Other', 247: 'Other', 248: 'Other', 249: 'Other'}
    # i = {'(seq9,((seq8,(seq5,(seq2,((seq1,seq7),seq4)))),(seq3,seq6)),seq0);': '#ffff00', 'Other': '#ff0000', '(seq6,(seq5,((seq1,((seq3,seq4),((seq7,seq9),seq2))),seq8)),seq0);': '#32cd32', '(((seq3,(((seq6,seq9),((seq8,seq2),seq7)),seq1)),seq5),seq4,seq0);': '#0000ff'}
    # j = 3

    # generateCircleGraph(j, h.items(), i, 0, 0)

    # Automatically open image files
    if platform == "win32":
        # WINDOWS OPEN FILE
        os.startfile("circleGraph" + ".pdf")

    elif platform == "darwin":
        # MAC OPEN FILE
        os.system("open " + "circleGraph" + ".pdf")
